{"ast":null,"code":"var _jsxFileName = \"/Users/mukul7711/Documents/webdev/course/react/my-app/src/Components/BarLabel.js\";\nimport * as React from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BarLabel() {\n  const seriesData = [{\n    data: [22, 34, 20],\n    color: '#f57c00'\n  }, {\n    data: [16, 28, 24],\n    color: '#7b1fa2'\n  }];\n  const labels = ['Green', 'Blue', 'Brown'];\n  const chartWidth = 500;\n  const chartHeight = 300;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: chartWidth,\n      height: chartHeight\n    },\n    children: [/*#__PURE__*/_jsxDEV(BarChart, {\n      xAxis: [{\n        scaleType: 'band',\n        data: labels\n      }],\n      series: seriesData.map(series => ({\n        data: series.data,\n        color: series.color\n      })),\n      width: chartWidth,\n      height: chartHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), seriesData.map((series, seriesIndex) => series.data.map((value, dataIndex) => /*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        position: 'absolute',\n        left: `${(dataIndex + 0.5) * (chartWidth / labels.length) - 20 + seriesIndex * 25}px`,\n        top: `${chartHeight - value / Math.max(...series.data) * chartHeight - 30}px`,\n        color: series.color,\n        fontSize: '14px',\n        fontWeight: 'bold'\n      },\n      children: value\n    }, `${seriesIndex}-${dataIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = BarLabel;\nvar _c;\n$RefreshReg$(_c, \"BarLabel\");","map":{"version":3,"names":["React","BarChart","Typography","jsxDEV","_jsxDEV","BarLabel","seriesData","data","color","labels","chartWidth","chartHeight","style","position","width","height","children","xAxis","scaleType","series","map","fileName","_jsxFileName","lineNumber","columnNumber","seriesIndex","value","dataIndex","left","length","top","Math","max","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["/Users/mukul7711/Documents/webdev/course/react/my-app/src/Components/BarLabel.js"],"sourcesContent":["import * as React from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { Typography } from '@mui/material';\n\nexport default function BarLabel() {\n  const seriesData = [\n    { data: [22, 34, 20], color: '#f57c00' },\n    { data: [16, 28, 24], color: '#7b1fa2' },\n  ];\n\n  const labels = ['Green', 'Blue', 'Brown'];\n  const chartWidth = 500;\n  const chartHeight = 300;\n\n  return (\n    <div style={{ position: 'relative', width: chartWidth, height: chartHeight }}>\n      <BarChart\n        xAxis={[{ scaleType: 'band', data: labels }]}\n        series={seriesData.map((series) => ({\n          data: series.data,\n          color: series.color,\n        }))}\n        width={chartWidth}\n        height={chartHeight}\n      />\n      {seriesData.map((series, seriesIndex) =>\n        series.data.map((value, dataIndex) => (\n          <Typography\n            key={`${seriesIndex}-${dataIndex}`}\n            style={{\n              position: 'absolute',\n              left: `${(dataIndex + 0.5) * (chartWidth / labels.length) - 20 + seriesIndex * 25}px`,\n              top: `${chartHeight - (value / Math.max(...series.data)) * chartHeight - 30}px`,\n              color: series.color,\n              fontSize: '14px',\n              fontWeight: 'bold',\n            }}\n          >\n            {value}\n          </Typography>\n        ))\n      )}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,MAAMC,UAAU,GAAG,CACjB;IAAEC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAU,CAAC,EACxC;IAAED,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAU,CAAC,CACzC;EAED,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC;EACzC,MAAMC,UAAU,GAAG,GAAG;EACtB,MAAMC,WAAW,GAAG,GAAG;EAEvB,oBACEP,OAAA;IAAKQ,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,KAAK,EAAEJ,UAAU;MAAEK,MAAM,EAAEJ;IAAY,CAAE;IAAAK,QAAA,gBAC3EZ,OAAA,CAACH,QAAQ;MACPgB,KAAK,EAAE,CAAC;QAAEC,SAAS,EAAE,MAAM;QAAEX,IAAI,EAAEE;MAAO,CAAC,CAAE;MAC7CU,MAAM,EAAEb,UAAU,CAACc,GAAG,CAAED,MAAM,KAAM;QAClCZ,IAAI,EAAEY,MAAM,CAACZ,IAAI;QACjBC,KAAK,EAAEW,MAAM,CAACX;MAChB,CAAC,CAAC,CAAE;MACJM,KAAK,EAAEJ,UAAW;MAClBK,MAAM,EAAEJ;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,EACDlB,UAAU,CAACc,GAAG,CAAC,CAACD,MAAM,EAAEM,WAAW,KAClCN,MAAM,CAACZ,IAAI,CAACa,GAAG,CAAC,CAACM,KAAK,EAAEC,SAAS,kBAC/BvB,OAAA,CAACF,UAAU;MAETU,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBe,IAAI,EAAE,GAAG,CAACD,SAAS,GAAG,GAAG,KAAKjB,UAAU,GAAGD,MAAM,CAACoB,MAAM,CAAC,GAAG,EAAE,GAAGJ,WAAW,GAAG,EAAE,IAAI;QACrFK,GAAG,EAAE,GAAGnB,WAAW,GAAIe,KAAK,GAAGK,IAAI,CAACC,GAAG,CAAC,GAAGb,MAAM,CAACZ,IAAI,CAAC,GAAII,WAAW,GAAG,EAAE,IAAI;QAC/EH,KAAK,EAAEW,MAAM,CAACX,KAAK;QACnByB,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE;MACd,CAAE;MAAAlB,QAAA,EAEDU;IAAK,GAVD,GAAGD,WAAW,IAAIE,SAAS,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWxB,CACb,CACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACW,EAAA,GAxCuB9B,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}