{"ast":null,"code":"var _jsxFileName = \"/Users/mukul7711/Documents/webdev/course/react/my-app/src/Components/BarLabel.js\";\nimport * as React from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BarLabel() {\n  const seriesData = [{\n    data: [0.514, 0.697, 0.786, 0.260, 0.560, 0.262, 0.574, 0.259, 0.700, 0.260, 0.527, 0.828],\n    color: '#1976d2'\n  }];\n  const labels = ['W', 'A', 'L', 'R', 'R', 'S', 'I', 'R', 'R', 'Q', 'S', ''];\n\n  // Calculate maximum value across all series to scale bar heights\n  const maxValue = Math.max(...seriesData.flatMap(series => series.data));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: 500,\n      height: 300\n    },\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      xAxis: [{\n        scaleType: 'band',\n        data: labels\n      }],\n      series: seriesData.map(series => ({\n        data: series.data,\n        color: series.color\n      })),\n      width: 500,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = BarLabel;\nvar _c;\n$RefreshReg$(_c, \"BarLabel\");","map":{"version":3,"names":["React","BarChart","jsxDEV","_jsxDEV","BarLabel","seriesData","data","color","labels","maxValue","Math","max","flatMap","series","style","position","width","height","children","xAxis","scaleType","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mukul7711/Documents/webdev/course/react/my-app/src/Components/BarLabel.js"],"sourcesContent":["import * as React from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\n\n\nexport default function BarLabel() {\n  const seriesData = [\n    { data: [0.514, 0.697, 0.786, 0.260, 0.560, 0.262, 0.574, 0.259, 0.700, 0.260, 0.527, 0.828], color: '#1976d2' },\n  ];\n\n  const labels = ['W', 'A', 'L', 'R', 'R', 'S', 'I', 'R', 'R', 'Q', 'S', ''];\n\n  // Calculate maximum value across all series to scale bar heights\n  const maxValue = Math.max(...seriesData.flatMap(series => series.data));\n\n  return (\n    <div style={{ position: 'relative', width: 500, height: 300 }}>\n      <BarChart\n        xAxis={[{ scaleType: 'band', data: labels }]}\n        series={seriesData.map((series) => ({\n          data: series.data,\n          color: series.color,\n        }))}\n        width={500}\n        height={300}\n      />\n      \n    </div>\n  );\n}\n\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,MAAMC,UAAU,GAAG,CACjB;IAAEC,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAAEC,KAAK,EAAE;EAAU,CAAC,CACjH;EAED,MAAMC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;;EAE1E;EACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,UAAU,CAACO,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACP,IAAI,CAAC,CAAC;EAEvE,oBACEH,OAAA;IAAKW,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAAC,QAAA,eAC5Df,OAAA,CAACF,QAAQ;MACPkB,KAAK,EAAE,CAAC;QAAEC,SAAS,EAAE,MAAM;QAAEd,IAAI,EAAEE;MAAO,CAAC,CAAE;MAC7CK,MAAM,EAAER,UAAU,CAACgB,GAAG,CAAER,MAAM,KAAM;QAClCP,IAAI,EAAEO,MAAM,CAACP,IAAI;QACjBC,KAAK,EAAEM,MAAM,CAACN;MAChB,CAAC,CAAC,CAAE;MACJS,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV;AAACC,EAAA,GAxBuBtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}