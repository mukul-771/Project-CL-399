{"ast":null,"code":"var _jsxFileName = \"/Users/mukul7711/Documents/webdev/course/react/my-app/src/pages/SurfaceSelection.js\",\n  _s = $RefreshSig$();\n// src/pages/SurfaceSelection.js\nimport React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\nimport styled from 'styled-components';\n\n// Container to center the content with shadow\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 40vh;\n`;\n\n// Container for the list of items with background and padding\n_c = PageContainer;\nconst ItemsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 20px;  // Gap between individual items\n  padding: 20px;\n  background-color: #0b59de;  \n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  width: 98%;\n  max-width: 98%;\n`;\n\n// Bento box styling for each item\n_c2 = ItemsContainer;\nconst BentoBox = styled.div`\n  flex: 1 1 calc(20% - 20px);  // 5 items per row with gap\n  box-sizing: border-box;\n  padding: 15px;\n  background-color: #ffffff;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  \n  // Ensuring proper responsive behavior\n  @media (max-width: 600px) {\n    flex: 1 1 calc(50% - 20px);  // 2 items per row on small screens\n  }\n`;\n\n// Pagination controls\n_c3 = BentoBox;\nconst PaginationControls = styled.div`\n  margin-top: 40px;\n  margin-bottom: 30px;\n`;\n_c4 = PaginationControls;\nconst Button = styled.button`\nwidth:70px;\nheight:60px;\ncolor:white;\nborder-radius:10px;\nbackground-color: #0b59de; \n  padding: 5px;\n  margin: 0 5px;\n`;\n_c5 = Button;\nconst itemsPerPage = 5;\nconst SurfaceSelection = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Example unique names for items\n  const allItems = ['Plastic Laminate', 'Engineered Stone', 'Butcher Block', 'Soapstone Slab', 'Recycled Glass', 'Marble Slab', 'Granite Tile', 'Quartz Countertop', 'Glass Panel', 'Wood Plank', 'Ceramic Tile', 'Stainless Steel Sheet', 'Concrete Slab', 'Granite Countertop', 'Limestone Tile', 'Porcelain Tile', 'Slate Tile', 'Travertine Tile', 'Onyx Slab', 'Metal Panel'];\n  const totalPages = Math.ceil(allItems.length / itemsPerPage);\n\n  // Calculate the items to display on the current page\n  const currentItems = allItems.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Surface Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select surfaces for your application and explore available options here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemsContainer, {\n      children: currentItems.map(item => /*#__PURE__*/_jsxDEV(BentoBox, {\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationControls, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(SurfaceSelection, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c6 = SurfaceSelection;\nexport default SurfaceSelection;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"ItemsContainer\");\n$RefreshReg$(_c3, \"BentoBox\");\n$RefreshReg$(_c4, \"PaginationControls\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"SurfaceSelection\");","map":{"version":3,"names":["React","useState","SearchBar","styled","jsxDEV","_jsxDEV","PageContainer","div","_c","ItemsContainer","_c2","BentoBox","_c3","PaginationControls","_c4","Button","button","_c5","itemsPerPage","SurfaceSelection","_s","currentPage","setCurrentPage","allItems","totalPages","Math","ceil","length","currentItems","slice","handlePageChange","newPage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onClick","disabled","_c6","$RefreshReg$"],"sources":["/Users/mukul7711/Documents/webdev/course/react/my-app/src/pages/SurfaceSelection.js"],"sourcesContent":["// src/pages/SurfaceSelection.js\nimport React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\nimport styled from 'styled-components';\n\n// Container to center the content with shadow\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 40vh;\n`;\n\n// Container for the list of items with background and padding\nconst ItemsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 20px;  // Gap between individual items\n  padding: 20px;\n  background-color: #0b59de;  \n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  width: 98%;\n  max-width: 98%;\n`;\n\n// Bento box styling for each item\nconst BentoBox = styled.div`\n  flex: 1 1 calc(20% - 20px);  // 5 items per row with gap\n  box-sizing: border-box;\n  padding: 15px;\n  background-color: #ffffff;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  \n  // Ensuring proper responsive behavior\n  @media (max-width: 600px) {\n    flex: 1 1 calc(50% - 20px);  // 2 items per row on small screens\n  }\n`;\n\n// Pagination controls\nconst PaginationControls = styled.div`\n  margin-top: 40px;\n  margin-bottom: 30px;\n`;\n\nconst Button = styled.button`\nwidth:70px;\nheight:60px;\ncolor:white;\nborder-radius:10px;\nbackground-color: #0b59de; \n  padding: 5px;\n  margin: 0 5px;\n`;\n\nconst itemsPerPage = 5;\n\nconst SurfaceSelection = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Example unique names for items\n  const allItems = [\n    'Plastic Laminate', 'Engineered Stone', 'Butcher Block', 'Soapstone Slab', 'Recycled Glass',\n    'Marble Slab', 'Granite Tile', 'Quartz Countertop', 'Glass Panel', 'Wood Plank',\n    'Ceramic Tile', 'Stainless Steel Sheet', 'Concrete Slab', 'Granite Countertop', 'Limestone Tile',\n    'Porcelain Tile', 'Slate Tile', 'Travertine Tile', 'Onyx Slab', 'Metal Panel'\n  ];\n\n  const totalPages = Math.ceil(allItems.length / itemsPerPage);\n\n  // Calculate the items to display on the current page\n  const currentItems = allItems.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  return (\n    <PageContainer>\n      <h1>Surface Selection</h1>\n      <SearchBar />\n      <p>Select surfaces for your application and explore available options here.</p>\n      \n      <ItemsContainer>\n        {currentItems.map(item => (\n          <BentoBox key={item}>{item}</BentoBox>\n        ))}\n      </ItemsContainer>\n      \n      <PaginationControls>\n        <Button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\n          Previous\n        </Button>\n        <span>Page {currentPage} of {totalPages}</span>\n        <Button onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages}>\n          Next\n        </Button>\n      </PaginationControls>\n    </PageContainer>\n  );\n}\n\nexport default SurfaceSelection;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GARMF,aAAa;AASnB,MAAMG,cAAc,GAAGN,MAAM,CAACI,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAG,GAAA,GAbMD,cAAc;AAcpB,MAAME,QAAQ,GAAGR,MAAM,CAACI,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAK,GAAA,GAhBMD,QAAQ;AAiBd,MAAME,kBAAkB,GAAGV,MAAM,CAACI,GAAG;AACrC;AACA;AACA,CAAC;AAACO,GAAA,GAHID,kBAAkB;AAKxB,MAAME,MAAM,GAAGZ,MAAM,CAACa,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,MAAM;AAUZ,MAAMG,YAAY,GAAG,CAAC;AAEtB,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAMsB,QAAQ,GAAG,CACf,kBAAkB,EAAE,kBAAkB,EAAE,eAAe,EAAE,gBAAgB,EAAE,gBAAgB,EAC3F,aAAa,EAAE,cAAc,EAAE,mBAAmB,EAAE,aAAa,EAAE,YAAY,EAC/E,cAAc,EAAE,uBAAuB,EAAE,eAAe,EAAE,oBAAoB,EAAE,gBAAgB,EAChG,gBAAgB,EAAE,YAAY,EAAE,iBAAiB,EAAE,WAAW,EAAE,aAAa,CAC9E;EAED,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACH,QAAQ,CAACI,MAAM,GAAGT,YAAY,CAAC;;EAE5D;EACA,MAAMU,YAAY,GAAGL,QAAQ,CAACM,KAAK,CAAC,CAACR,WAAW,GAAG,CAAC,IAAIH,YAAY,EAAEG,WAAW,GAAGH,YAAY,CAAC;EAEjG,MAAMY,gBAAgB,GAAIC,OAAO,IAAK;IACpC,IAAIA,OAAO,IAAI,CAAC,IAAIA,OAAO,IAAIP,UAAU,EAAE;MACzCF,cAAc,CAACS,OAAO,CAAC;IACzB;EACF,CAAC;EAED,oBACE1B,OAAA,CAACC,aAAa;IAAA0B,QAAA,gBACZ3B,OAAA;MAAA2B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B/B,OAAA,CAACH,SAAS;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACb/B,OAAA;MAAA2B,QAAA,EAAG;IAAwE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE/E/B,OAAA,CAACI,cAAc;MAAAuB,QAAA,EACZJ,YAAY,CAACS,GAAG,CAACC,IAAI,iBACpBjC,OAAA,CAACM,QAAQ;QAAAqB,QAAA,EAAaM;MAAI,GAAXA,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eAEjB/B,OAAA,CAACQ,kBAAkB;MAAAmB,QAAA,gBACjB3B,OAAA,CAACU,MAAM;QAACwB,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAACT,WAAW,GAAG,CAAC,CAAE;QAACmB,QAAQ,EAAEnB,WAAW,KAAK,CAAE;QAAAW,QAAA,EAAC;MAEvF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT/B,OAAA;QAAA2B,QAAA,GAAM,OAAK,EAACX,WAAW,EAAC,MAAI,EAACG,UAAU;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/C/B,OAAA,CAACU,MAAM;QAACwB,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAACT,WAAW,GAAG,CAAC,CAAE;QAACmB,QAAQ,EAAEnB,WAAW,KAAKG,UAAW;QAAAQ,QAAA,EAAC;MAEhG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEpB,CAAC;AAAAhB,EAAA,CA7CKD,gBAAgB;AAAAsB,GAAA,GAAhBtB,gBAAgB;AA+CtB,eAAeA,gBAAgB;AAAC,IAAAX,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAlC,EAAA;AAAAkC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAA9B,GAAA;AAAA8B,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}