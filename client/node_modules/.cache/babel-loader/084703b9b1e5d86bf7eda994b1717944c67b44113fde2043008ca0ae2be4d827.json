{"ast":null,"code":"// src/pages/Glossary.js\nimport React from'react';import styled from'styled-components';import SearchBar from'../Components/SearchBar';// Container for centering content\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GlossaryContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 60vh;  // Adjust as needed\n  text-align: center;  // Center text within the container\n  padding: 20px;\n  margin-bottom: 40px;\n`;const Title=styled.h1`\n  font-family: 'Times New Roman', Times, serif; \n  font-size: 2.5em;\n  margin-bottom: 20px;\n  color: #333;\n`;const Description=styled.p`\n  font-size: 1.2em;\n  margin-bottom: 40px;\n  color: #666;\n`;const SearchBarContainer=styled.div`\n  margin-bottom: 30px;  // Space between search bar and glossary\n  width: 100%;\n  max-width: 100%;  // Adjust max-width to your preferred size\n  display: flex;\n  justify-content: center;  // Center align the search bar\n  padding: 0 20px;  // Add padding for responsiveness\n`;const GlossaryGrid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);  // 2 columns in the grid\n  gap: 20px;\n  width: 100%;\n  max-width: 1200px;\n\n  // Responsive adjustments\n  @media (max-width: 800px) {\n    grid-template-columns: 1fr;  // 1 column on smaller screens\n  }\n`;const GlossaryCard=styled.div`\n  background-color: #ffffff;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    transform: translateY(-10px);\n    box-shadow: 0 16px 24px rgba(0, 0, 0, 0.2);\n  }\n`;const GlossaryTerm=styled.h3`\n  font-size: 1.5em;\n  margin-bottom: 10px;\n  color: #222;\n`;const GlossaryDefinition=styled.p`\n  font-size: 1em;\n  color: #444;\n`;function Glossary(){return/*#__PURE__*/_jsxs(GlossaryContainer,{children:[/*#__PURE__*/_jsx(Title,{children:\"Glossary\"}),/*#__PURE__*/_jsx(Description,{children:\"Find definitions and explanations of key terms used in this application.\"}),/*#__PURE__*/_jsx(SearchBarContainer,{children:/*#__PURE__*/_jsx(SearchBar,{})}),/*#__PURE__*/_jsxs(GlossaryGrid,{children:[/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"API\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"API stands for Application Programming Interface. It is a set of rules that allows different software applications to communicate with each other.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Component\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"In React, a component is a reusable piece of UI that can be rendered as part of the application. Components can be functional or class-based.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"State\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"State refers to the data or information maintained by a component that can change over time and affect how the component renders.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Props\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"Props (short for properties) are inputs to a React component that allow data to be passed from a parent component to a child component.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Reducer\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"A reducer is a function used in state management (like Redux) to specify how the state of an application changes in response to actions.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Reducer\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"A reducer is a function used in state management (like Redux) to specify how the state of an application changes in response to actions.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Reducer\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"A reducer is a function used in state management (like Redux) to specify how the state of an application changes in response to actions.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Reducer\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"A reducer is a function used in state management (like Redux) to specify how the state of an application changes in response to actions.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Hook\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"Hooks are functions that let you use state and other React features without writing a class. Examples include `useState` and `useEffect`.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Event Handler\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"An event handler is a function that responds to user interactions or other events, such as clicks, form submissions, or keyboard inputs.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Virtual DOM\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Virtual DOM\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Virtual DOM\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Virtual DOM\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Virtual DOM\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Virtual DOM\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Virtual DOM\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\"})]}),/*#__PURE__*/_jsxs(GlossaryCard,{children:[/*#__PURE__*/_jsx(GlossaryTerm,{children:\"Virtual DOM\"}),/*#__PURE__*/_jsx(GlossaryDefinition,{children:\"The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\"})]})]})]});}export default Glossary;","map":{"version":3,"names":["React","styled","SearchBar","jsx","_jsx","jsxs","_jsxs","GlossaryContainer","div","Title","h1","Description","p","SearchBarContainer","GlossaryGrid","GlossaryCard","GlossaryTerm","h3","GlossaryDefinition","Glossary","children"],"sources":["/Users/mukul7711/Documents/webdev/course/react/my-app/src/pages/Glossary.js"],"sourcesContent":["// src/pages/Glossary.js\nimport React from 'react';\nimport styled from 'styled-components';\nimport SearchBar from '../Components/SearchBar';\n\n// Container for centering content\nconst GlossaryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 60vh;  // Adjust as needed\n  text-align: center;  // Center text within the container\n  padding: 20px;\n  margin-bottom: 40px;\n`;\n\nconst Title = styled.h1`\n  font-family: 'Times New Roman', Times, serif; \n  font-size: 2.5em;\n  margin-bottom: 20px;\n  color: #333;\n`;\n\nconst Description = styled.p`\n  font-size: 1.2em;\n  margin-bottom: 40px;\n  color: #666;\n`;\n\nconst SearchBarContainer = styled.div`\n  margin-bottom: 30px;  // Space between search bar and glossary\n  width: 100%;\n  max-width: 100%;  // Adjust max-width to your preferred size\n  display: flex;\n  justify-content: center;  // Center align the search bar\n  padding: 0 20px;  // Add padding for responsiveness\n`;\n\nconst GlossaryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);  // 2 columns in the grid\n  gap: 20px;\n  width: 100%;\n  max-width: 1200px;\n\n  // Responsive adjustments\n  @media (max-width: 800px) {\n    grid-template-columns: 1fr;  // 1 column on smaller screens\n  }\n`;\n\nconst GlossaryCard = styled.div`\n  background-color: #ffffff;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    transform: translateY(-10px);\n    box-shadow: 0 16px 24px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst GlossaryTerm = styled.h3`\n  font-size: 1.5em;\n  margin-bottom: 10px;\n  color: #222;\n`;\n\nconst GlossaryDefinition = styled.p`\n  font-size: 1em;\n  color: #444;\n`;\n\nfunction Glossary() {\n  return (\n    <GlossaryContainer>\n      <Title>Glossary</Title>\n      <Description>Find definitions and explanations of key terms used in this application.</Description>\n      \n      <SearchBarContainer>\n        <SearchBar />\n      </SearchBarContainer>\n\n      <GlossaryGrid>\n        <GlossaryCard>\n          <GlossaryTerm>API</GlossaryTerm>\n          <GlossaryDefinition>\n            API stands for Application Programming Interface. It is a set of rules that allows different software applications to communicate with each other.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Component</GlossaryTerm>\n          <GlossaryDefinition>\n            In React, a component is a reusable piece of UI that can be rendered as part of the application. Components can be functional or class-based.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>State</GlossaryTerm>\n          <GlossaryDefinition>\n            State refers to the data or information maintained by a component that can change over time and affect how the component renders.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Props</GlossaryTerm>\n          <GlossaryDefinition>\n            Props (short for properties) are inputs to a React component that allow data to be passed from a parent component to a child component.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Reducer</GlossaryTerm>\n          <GlossaryDefinition>\n            A reducer is a function used in state management (like Redux) to specify how the state of an application changes in response to actions.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Reducer</GlossaryTerm>\n          <GlossaryDefinition>\n            A reducer is a function used in state management (like Redux) to specify how the state of an application changes in response to actions.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Reducer</GlossaryTerm>\n          <GlossaryDefinition>\n            A reducer is a function used in state management (like Redux) to specify how the state of an application changes in response to actions.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Reducer</GlossaryTerm>\n          <GlossaryDefinition>\n            A reducer is a function used in state management (like Redux) to specify how the state of an application changes in response to actions.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Hook</GlossaryTerm>\n          <GlossaryDefinition>\n            Hooks are functions that let you use state and other React features without writing a class. Examples include `useState` and `useEffect`.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Event Handler</GlossaryTerm>\n          <GlossaryDefinition>\n            An event handler is a function that responds to user interactions or other events, such as clicks, form submissions, or keyboard inputs.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Virtual DOM</GlossaryTerm>\n          <GlossaryDefinition>\n            The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Virtual DOM</GlossaryTerm>\n          <GlossaryDefinition>\n            The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Virtual DOM</GlossaryTerm>\n          <GlossaryDefinition>\n            The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Virtual DOM</GlossaryTerm>\n          <GlossaryDefinition>\n            The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Virtual DOM</GlossaryTerm>\n          <GlossaryDefinition>\n            The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Virtual DOM</GlossaryTerm>\n          <GlossaryDefinition>\n            The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Virtual DOM</GlossaryTerm>\n          <GlossaryDefinition>\n            The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\n          </GlossaryDefinition>\n        </GlossaryCard>\n        <GlossaryCard>\n          <GlossaryTerm>Virtual DOM</GlossaryTerm>\n          <GlossaryDefinition>\n            The Virtual DOM is a lightweight copy of the actual DOM used by React to optimize rendering and improve performance by minimizing direct manipulation of the real DOM.\n          </GlossaryDefinition>\n        </GlossaryCard>\n      </GlossaryGrid>\n    </GlossaryContainer>\n  );\n}\n\nexport default Glossary;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}