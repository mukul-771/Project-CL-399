{"ast":null,"code":"var _jsxFileName = \"/Users/mukul7711/Documents/webdev/course/react/my-app/src/pages/SurfaceSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\nimport styled from 'styled-components';\n\n// ... (Other styled-components remain unchanged)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurfaceSelection = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Example unique names for items\n  const allItems = ['Plastic Laminate', 'Engineered Stone', 'Butcher Block', 'Soapstone Slab', 'Recycled Glass', 'Marble Slab', 'Granite Tile', 'Quartz Countertop', 'Glass Panel', 'Wood Plank', 'Ceramic Tile', 'Stainless Steel Sheet', 'Concrete Slab', 'Granite Countertop', 'Limestone Tile', 'Porcelain Tile', 'Slate Tile', 'Travertine Tile', 'Onyx Slab', 'Metal Panel'];\n\n  // Filter items based on search query\n  const filteredItems = allItems.filter(item => item.toLowerCase().includes(searchQuery.toLowerCase()));\n  const totalPages = Math.ceil(filteredItems.length / itemsPerPage);\n\n  // Calculate the items to display on the current page\n  const currentItems = filteredItems.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  const handleSearchChange = query => {\n    setSearchQuery(query);\n    setCurrentPage(1); // Reset to first page on search\n  };\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Surface Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      children: \"Select surfaces for your application and explore available options here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemsContainer, {\n      children: currentItems.map(item => /*#__PURE__*/_jsxDEV(BentoBox, {\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationControls, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PageIndicator, {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(SurfaceSelection, \"wY2mb4Wh7TfWG6jL4UO2v0VpWaE=\");\n_c = SurfaceSelection;\nexport default SurfaceSelection;\nvar _c;\n$RefreshReg$(_c, \"SurfaceSelection\");","map":{"version":3,"names":["React","useState","SearchBar","styled","jsxDEV","_jsxDEV","SurfaceSelection","_s","currentPage","setCurrentPage","searchQuery","setSearchQuery","allItems","filteredItems","filter","item","toLowerCase","includes","totalPages","Math","ceil","length","itemsPerPage","currentItems","slice","handlePageChange","newPage","handleSearchChange","query","PageContainer","children","Heading","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","Description","ItemsContainer","map","BentoBox","PaginationControls","Button","onClick","disabled","PageIndicator","_c","$RefreshReg$"],"sources":["/Users/mukul7711/Documents/webdev/course/react/my-app/src/pages/SurfaceSelection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SearchBar from '../Components/SearchBar';\nimport styled from 'styled-components';\n\n// ... (Other styled-components remain unchanged)\n\nconst SurfaceSelection = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Example unique names for items\n  const allItems = [\n    'Plastic Laminate', 'Engineered Stone', 'Butcher Block', 'Soapstone Slab', 'Recycled Glass',\n    'Marble Slab', 'Granite Tile', 'Quartz Countertop', 'Glass Panel', 'Wood Plank',\n    'Ceramic Tile', 'Stainless Steel Sheet', 'Concrete Slab', 'Granite Countertop', 'Limestone Tile',\n    'Porcelain Tile', 'Slate Tile', 'Travertine Tile', 'Onyx Slab', 'Metal Panel'\n  ];\n\n  // Filter items based on search query\n  const filteredItems = allItems.filter(item =>\n    item.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const totalPages = Math.ceil(filteredItems.length / itemsPerPage);\n\n  // Calculate the items to display on the current page\n  const currentItems = filteredItems.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  const handleSearchChange = (query) => {\n    setSearchQuery(query);\n    setCurrentPage(1); // Reset to first page on search\n  };\n\n  return (\n    <PageContainer>\n      <Heading>Surface Selection</Heading>\n      <SearchBar onSearch={handleSearchChange} />\n      <Description>Select surfaces for your application and explore available options here.</Description>\n      \n      <ItemsContainer>\n        {currentItems.map(item => (\n          <BentoBox key={item}>{item}</BentoBox>\n        ))}\n      </ItemsContainer>\n      \n      <PaginationControls>\n        <Button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\n          Previous\n        </Button>\n        <PageIndicator>Page {currentPage} of {totalPages}</PageIndicator>\n        <Button onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages}>\n          Next\n        </Button>\n      </PaginationControls>\n    </PageContainer>\n  );\n}\n\nexport default SurfaceSelection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}